@import "styles/helpers";
@import "styles/variables";

.EditorBlock {
    position: relative;

    &.extendedHitArea {
        > .Frame > .Content {
            padding-top: $spacing-3;
            padding-bottom: $spacing-3;
        }
    }

    &.isVoid {
        caret-color: transparent;
    }

    &.isVoid > .Frame {
        /**
         * Selection in Slate 0.50+ does not work as expected if a void block is selectable.
         * It could lead to an error when Slate is resolving the node which crashes the editor.
         *
         * Also, it's not possible to drag a node when it's selectable.
         *
         * see: https://app.clubhouse.io/prezly/story/19824/weird-selection-after-editing-an-attachment-or-image-or-gallery
         * see: https://app.clubhouse.io/prezly/story/20456/error-cannot-resolve-a-dom-node-from-slate-node-text
         */
        user-select: none;
    }

    & + & [data-new-paragraph-delimiter-position="top"] {
        display: none !important;
    }

    &.rounded {
        border-radius: $editor-block-border-radius;
    }

    &.hasError {
        border-radius: 0;
    }

    &.selected {
        border-radius: 0;
    }
}

.Frame {
    max-width: 100%;
    white-space: normal;
    position: relative;
    caret-color: initial;
    border-radius: inherit;

    &.alignLeft {
        margin-left: 0;
        margin-right: auto;
    }

    &.alignCenter {
        margin-left: auto;
        margin-right: auto;
    }

    &.alignRight {
        margin-left: auto;
        margin-right: 0;
    }
}

.LoadingIndicator {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.4);

    width: 50%;
    animation: 3s infinite progress-width;

    @keyframes progress-width {
        from {
            left: 0;
            width: 0;
        }
        50% {
            left: 0;
            width: 100%;
        }
        to {
            left: 100%;
            width: 0;
        }
    }
}

.Content {
    position: relative;
    border-radius: inherit;

    .withOverlay & {
        z-index: $editor-block-overlay-z-index - 1;
    }

    &.editable {
        white-space: pre-wrap;
    }

    &.border {
        border: 1px solid $grey-200;

        &.selected {
            border-color: $editor-block-focus-color;
        }
    }

    .loading & > * {
        opacity: 0.5;
    }

    @mixin outline($outline-color, $outline-position: "outer") {
        outline: solid $editor-block-outline-width $outline-color;
    }

    &.hasError {
        color: $legacy-color-status-error;

        @include outline($legacy-color-status-error);
    }

    &.selected {
        @include outline($editor-block-focus-color);
    }
}

.Overlay {
    z-index: $editor-block-overlay-z-index;
}

.Menu {
    z-index: $editor-block-overlay-z-index + 2;
}

.editorBlockResizing {
    pointer-events: none;
}

.ResizeButton {
    z-index: $editor-block-overlay-z-index + 1;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);

    &.left {
        left: $spacing-1;
    }

    &.right {
        right: $spacing-1;
    }
}
