@import "styles/helpers";
@import "styles/variables";

.EditorBlock {
    position: relative;

    &.extendedHitArea {
        > .Frame > .Content {
            padding-top: $spacing-3;
            padding-bottom: $spacing-3;
        }
    }

    &.void {
        caret-color: transparent;
    }

    &.void > .Frame {
        /**
         * Selection in Slate 0.50+ does not work as expected if a void block is selectable.
         * It could lead to an error when Slate is resolving the node which crashes the editor.
         *
         * Also, it's not possible to drag a node when it's selectable.
         *
         * see: https://app.clubhouse.io/prezly/story/19824/weird-selection-after-editing-an-attachment-or-image-or-gallery
         * see: https://app.clubhouse.io/prezly/story/20456/error-cannot-resolve-a-dom-node-from-slate-node-text
         */
        user-select: none;
    }
}

.EntryPoint {
    $height: $spacing-2;
    $offset: $height + $spacing-2;

    position: absolute;
    width: 100%;
    cursor: vertical-text;
    color: transparent;
    font-size: 0;
    line-height: 0;
    height: $height;

    &:hover {
        &:before {
            content: " ";
            position: absolute;
            left: 0;
            right: 0;
            top: 50%;
        }
    }

    &.top {
        top: -$offset;
    }

    &.bottom {
        bottom: -$offset;
    }

    .extendedHitArea & {
        $offset: $height;

        &.top {
            top: -$offset;
        }

        &.bottom {
            bottom: -$offset;
        }
    }

    .EditorBlock + .EditorBlock &.top {
        display: none;
    }
}

.Frame {
    max-width: 100%;
    white-space: normal;
    position: relative;
    caret-color: initial;

    &.alignLeft {
        margin-left: 0;
        margin-right: auto;
    }

    &.alignCenter {
        margin-left: auto;
        margin-right: auto;
    }

    &.alignRight {
        margin-left: auto;
        margin-right: 0;
    }
}

.Content {
    position: relative;
    z-index: $editor-block-overlay-z-index - 1;

    &.overflowHidden {
        overflow: hidden;
    }

    &.overflowVisible {
        overflow: visible;
    }

    &.editable {
        white-space: pre-wrap;
    }

    &.border {
        border: 1px solid $grey-200;

        &.selected {
            border-color: $editor-block-focus-color;
        }
    }

    &.rounded {
        border-radius: $border-radius-small;
    }

    &.hasError {
        color: $legacy-color-status-error;
        outline: solid 6px $legacy-color-status-error;
        border-radius: 0;
    }

    &.selected {
        outline: solid $editor-block-focus-outline-width $editor-block-focus-color;
        border-radius: 0;
    }

    &.fullWidth.selected {
        outline: none;

        &::after {
            content: "";
            display: block;
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            pointer-events: none;
            outline: solid 6px $editor-block-focus-color;
            outline-offset: -6px;
        }
    }
}

.Overlay {
    z-index: $editor-block-overlay-z-index;
}

.Menu {
    z-index: $editor-block-overlay-z-index + 2;
}

.ResizeButton {
    z-index: $editor-block-overlay-z-index + 1;
    position: absolute;

    &.left {
        left: $spacing-1;
        bottom: $spacing-1;
    }

    &.right {
        right: $spacing-1;
        bottom: $spacing-1;
    }
}

.StandardMenu {
    transition: opacity 0.3s ease-in-out;
    opacity: 0;
    z-index: $editor-block-overlay-z-index + 3;

    .EditorBlock:hover & {
        opacity: 0.5;
    }

    &:hover {
        opacity: 1.0 !important;
    }
}
